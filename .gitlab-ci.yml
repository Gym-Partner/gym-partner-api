image: golang:latest

variables:
    AWS_CLI_REGION: "us-east-1"
    ECR_URI: "public.ecr.aws/h4z0a5x7/gym-partner/gym-partner-api"
    DOCKER_IMAGE: "gym-partner/gym-partner-api"
    TAG: "v1.0.0.3"
    DOCKER_DRIVER: overlay2
    ARGOCD_APPLICATION_NAME: "gym-partner-api"

stages:
    - build
    - deploy

docker:
    stage: build
    image: docker:latest
    services:
        - docker:19.03.12-dind
    before_script:
        - apk add --no-cache aws-cli
        - aws --version
        - aws configure set aws_access_key_id $AWS_CLI_ACCESS_KEY_ID
        - aws configure set aws_secret_access_key $AWS_CLI_SECRET
        - aws configure set region $AWS_CLI_REGION
        - aws ecr-public get-login-password --region $AWS_CLI_REGION | docker login --username AWS --password-stdin public.ecr.aws/h4z0a5x7
    script:
        - docker build -t $DOCKER_IMAGE:$TAG .
        - docker tag $DOCKER_IMAGE:$TAG $ECR_URI:$TAG
        - docker push $ECR_URI:$TAG
    rules:
        - if: $CI_COMMIT_BRANCH == 'main'

argocd:
    stage: deploy
    before_script:
        - curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        - chmod +x argocd
        - mv ./argocd /usr/local/bin/argocd
    script:
        - argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure
        - argocd app sync $ARGOCD_APPLICATION_NAME --prune
        - argocd app wait $ARGOCD_APPLICATION_NAME --health --sync
    rules:
        - if: $CI_COMMIT_BRANCH == 'main'

